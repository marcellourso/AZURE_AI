azure open ai registered as m.urso@sintesi-srl.com
rusumqlmbegr2augcghwjpmepm52tzbdk3q35ps5ksbsb4657xsa Personal token PAT On azure devops

VIDEO INDEXER AI (videoindexer.ai api-portal.videoindexer.ai)
------------------------------------------------------------
Started on
08/16/2024
YOUR_ACCOUNT_ID
c3ca7905-0236-4396-886e-8e1a10e97f88
Primary key
36f252fd6be449b5a1a9d36cee8f10bc
Secondary key
264ed6b4051342d19259e389cb3896f4

Use the REST API
Now that you have the account ID and an API key, you can use the REST API to work with videos in your account.
In this procedure, you'll use a PowerShell script to make REST calls; but the same principles apply with HTTP
 utilities such as cURL or Postman, or any programming language capable of sending and receiving JSON over HTTP.

All interactions with the Video Indexer REST API follow the same pattern:

An initial request to the AccessToken method with the API key in the header is used to obtain an access token.
Subsequent requests use the access token to authenticate when calling REST methods to work with videos.
In Visual Studio Code, in the 06-video-indexer folder, open get-videos.ps1.
In the PowerShell script, replace the YOUR_ACCOUNT_ID and YOUR_API_KEY placeholders with the account ID and API key
values you identified previously.

Observe that the location for a free account is "trial". If you have created an unrestricted Video Indexer account 
(with an associated Azure resource), you can change this to the location where your Azure resource is provisioned 
(for example "eastus").

Review the code in the script, noting that invokes two REST methods: one to get an access token, and another to list
the videos in your account.

Save your changes, and then at the top-right of the script pane, use the â–· button to run the script.
View the JSON response from the REST service, which should contain details of the Responsible AI video you indexed previously.

